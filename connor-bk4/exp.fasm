format ELF64 executable

segment readable executable
entry _start
_start:
    xor rdi, rdi
    movsx rdi, byte [msg]
    call decF
    mov byte [msg], al

    mov rax, 1
    mov rdi, 1
    mov rsi, msg
    mov rdx, 2
    syscall

    mov rax, 60
    mov rdi, 0
    syscall

decF:
    mov rdx, rdi
    mov rsi, rdx
    add rsi, -1
    mov rax, rsi
    ret

segment readable writable
msg db 67, 10

; V1
;dec:
;    mov r3, r1
;    mov r5, 1
;    mov r4, r5
;    not r4
;    mov r2, r3
;    add r2, r4
;    mov r0, r2
;    ret

; V2
;dec:
;   mov r3, r1
;   mov r5, 1
;   mov r4, r5
;   not r4
;   inc r4
;   mov r2, r3
;   add r2, r4
;   mov r0, r2
;   ret

; V3
;dec:
;   mov r3, r1
;   mov r4, -1
;   mov r2, r3
;   add r2, r4
;   mov r0, r2
;   ret

; V4
;dec:
;   mov r3, r1
;   mov r2, r3
;   add r2, -1
;   mov r0, r2
;   ret
