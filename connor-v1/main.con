//extern u64 syscall1(u64, u64);
//extern u64 syscall3(u64, u64, u64, u64);
//extern noreturn exit(u32);

extern &u8 malloc(u64);
extern u64 free(&u8);
extern u64 read(u64, &u8, u64);
extern u64 write(u64, &u8, u64);
extern u64 dump(u64);
extern u8 dumpByte(u8);
extern u64 deref(u64);
extern u64 x;

u32 maxU32() 4294967295;
u32 add(u32 a, u32 b) a + b;
u32 inc(u32 a) 1 + a;
//u32 cond() if (1 == 2) 1 else 2;
//u64 read(u64 fd, u64 ptr, u64 count) syscall3(0, fd, ptr, count);

export u32 main() {
    u64 count = 16;
    &u8 ptr = malloc(count);
    u64 len = read(0, ptr, count);
    write(1, ptr, len);
    //dump(ptr);
    //{
    //    u64 l = 100;
    //    dump(l);
    //    l = l - 10;
    //    dump(l);
    //};

    u64 c = x;
    dump(c);
    dump(c+1);
    dump(c-1);
    dump(c*2);

    free(ptr);
    return 0;
};

// Entry function
//export noreturn _start() {
//    return exit(main());
    //u32 a = 1;
    //if (a == 1) exit(inc(a)) else exit(a);
    //if (1 == 1) exit(10) else exit(20);
    //exit(cond());
    //return exit(inc(add(maxU32(), 1)));
//};
